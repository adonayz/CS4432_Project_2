package simpledb.opt;

import simpledb.materialize.MergeJoinPlan;
import simpledb.parse.QueryData;
import simpledb.planner.QueryPlanner;
import simpledb.query.*;
import simpledb.server.SimpleDB;
import simpledb.tx.Transaction;

import java.util.ArrayList;

/**
 * Created by Adonay on 4/25/2018.
 * CS4432-Project: This class was created for the Task 5 section of the project.
 *
 */
public class ExploitSortQueryPlanner implements QueryPlanner{

    @Override
    public Plan createPlan(QueryData data, Transaction tx) {
        ArrayList<Plan> tablePlans = new ArrayList<>();

        // Step 1:  Create a TablePlan object for each mentioned table
        for (String tblname : data.tables()) {
            String vd = null;
            if((vd = SimpleDB.mdMgr().getViewDef(tblname, tx)) == null){
                tablePlans.add(new TablePlan(tblname, tx));
            }else{
                tablePlans.add(SimpleDB.planner().createQueryPlan(vd, tx));
            }
        }

        // Step 2:  Choose the first plan to begin the join order
        Plan currentplan = tablePlans.remove(0);

        // Step 3:  Repeatedly add a plan to the join order
        for(Plan tablePlan: tablePlans){
            Plan tmp = smartMergeJoinPlan(currentplan, tablePlan, data, tx);
            if(tmp == null){
                currentplan = new ProductPlan(currentplan, tablePlan);
            }else{
                currentplan = tmp;
            }
        }

        // Step 4:  add selection plan
        currentplan = new SelectPlan(currentplan, data.pred());

        // Step 5.  Project on the field names and return
        return new ProjectPlan(currentplan, data.fields());
    }

    private Plan smartMergeJoinPlan(Plan lhs, Plan rhs, QueryData data, Transaction tx){
        String lf = null;
        String rf = null;
        for(String field: lhs.schema().fields()){
            lf = field;
            rf = data.pred().equatesWithField(lf);
            if(rf != null){
                break;
            }
        }
        if(lf == null || rf == null){
            return null;
        }else{
            return new MergeJoinPlan(lhs, rhs, lf, rf, tx);
        }
    }
}
